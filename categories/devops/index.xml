<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devops on Kabads</title><link>https://kabads.monkeez.org/categories/devops.html</link><description>Recent content in devops on Kabads</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Fri, 20 Aug 2021 08:00:00 +0000</lastBuildDate><atom:link href="https://kabads.monkeez.org/categories/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Test Driven Development</title><link>https://kabads.monkeez.org/2021/08/20/Test-Driven-Development.html</link><pubDate>Fri, 20 Aug 2021 08:00:00 +0000</pubDate><guid>https://kabads.monkeez.org/2021/08/20/Test-Driven-Development.html</guid><description>So, I started learning Golang recently, and decided that Learn Go with Tests was a good way to go. However, there was a great &amp;lsquo;buy-one-get-one-free&amp;rsquo; with this resource - it also taught me some of the benefits of Test Driven Development (TDD). There are four steps to TDD:
Write the test Write a minimal amount of code for the test to recognise the code (e.g. write the function and just return - the test should still fail) Write the function correctly to return the expected output Refactor (change the code to better represent the test case) I&amp;rsquo;m not using Go that much at work, with Python being the dominant language (for now).</description></item></channel></rss>