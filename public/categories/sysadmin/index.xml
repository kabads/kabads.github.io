<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sysadmin on Kabads. Musings, mutterings and murmerings.</title>
    <link>/categories/sysadmin/</link>
    <description>Recent content in sysadmin on Kabads. Musings, mutterings and murmerings.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/categories/sysadmin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Verify Azure Blob Storage Automatically</title>
      <link>/2020-12-22-verify-azure-storage-blob-automatically/</link>
      <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020-12-22-verify-azure-storage-blob-automatically/</guid>
      <description>This blog post outlines a problem I had whereby there were lots of files in Azure storage and I wanted to check that they had been uploaded correctly.
Problem You want to verify lots of files that have uploaded to Azure Blob Storage? Look no further. https://github.com/kabads/md5sum.
So, I had to upload a lot of media assets for work in a hurry as a server was being shut down. We had Azure, and as these were static files, that seemed like a good solution.</description>
    </item>
    
    <item>
      <title>Rsyslog configured to monitor journald /run/systemd/journal/syslog socket</title>
      <link>/2020-03-19-rsyslog-listening-to-socket/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020-03-19-rsyslog-listening-to-socket/</guid>
      <description>Rsyslog (aka syslog) can pull in logs from journald, via the socket (using imuxsock module) or a specific module that taps in to a socket that is journald runs (imjournal) with very little config. imjournal specialises in logging that is structured (e.g. logs that follow json structure) and then filtering or querying logs. As a result, imjournal is more expensive. These modules are already loaded by default inrsyslog.conf file and do not need adding in any other configuration files.</description>
    </item>
    
    <item>
      <title>SELinux Users, Roles, and Types</title>
      <link>/2020-01-03-selinux-users-roles-types/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020-01-03-selinux-users-roles-types/</guid>
      <description>SELinux contexts follow the SELinux user:role:type:level syntax.
Users Users can be seen with the command:
semanage user -l  This will show the list of SELinux users, and is mapped to Linux users. If a Linux user is not listed then they are associated with the __default__ SELinux user and inherit those rights.
Roles Role based access control is a go-between from the user to the domain. By assigning roles, a user can access particular domains.</description>
    </item>
    
    <item>
      <title>Setting Filesystem ACLs on Linux</title>
      <link>/2019-12-30-setting-acl-linux-filesystem/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019-12-30-setting-acl-linux-filesystem/</guid>
      <description>ACLs are a method for defining access to files and directories on a system. These can be set at the user level, group level, or via the effective rights mask.
The commands getfacl and setfacl are used to get and change ACL permissions respectively. If you are setting for a specific user then the text form of the attribute is user:username:rwx. If you want the permission to apply to the default user (or group) then you would use the text term user::rwx</description>
    </item>
    
    <item>
      <title>Setting Up Fujitsu Snapscan S1300i on Arch Linux</title>
      <link>/2019-03-10-using-fujitsu-snapscan-s1300i-on-arch/</link>
      <pubDate>Sun, 10 Mar 2019 18:15:30 +0000</pubDate>
      
      <guid>/2019-03-10-using-fujitsu-snapscan-s1300i-on-arch/</guid>
      <description>&lt;p&gt;I have bought a Fujitsu Snapscan S1301i scanner - mainly because it is duplex - it saves a lot of time and will scan directly to Evernote. So far, I&amp;rsquo;m pleased with it, but the initial thought when I got it home was, &amp;lsquo;how am I going to get it working with Arch Linux?&amp;rsquo;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setting Up MySQL Replication as a back-up solution</title>
      <link>/2018-08-27-setting-up-mysql-replication/</link>
      <pubDate>Mon, 27 Aug 2018 12:32:30 +0000</pubDate>
      
      <guid>/2018-08-27-setting-up-mysql-replication/</guid>
      <description>MySQL replication is a good thing to have. It provides greater resilience and removes a single point of failure. By following these steps, you will create a replica of a master server, acting as a permanent backup in the case of a DR scenario.
Introduction MySQL servers can be a single point of failure if you have not set up a good back-up infrastructure. It is difficult to get a good back-up infrastructure in place, without some time spent out of service.</description>
    </item>
    
    <item>
      <title>Configure Autofs on Arch Linux</title>
      <link>/2018-08-11-configure-autofs/</link>
      <pubDate>Sat, 11 Aug 2018 10:07:00 +0000</pubDate>
      
      <guid>/2018-08-11-configure-autofs/</guid>
      <description>Autofs is a way of auto-mounting devices to a running system. Theses steps will walk through enabling it on an Archlinux system.
What is Autofs? It mounts a filesystem that is not always connected (e.g. network or device). Once a connection is made to that device, then autofs will handle the mounting of that device. It can also handle unmounting of a device, if it becomes unavailable. /etc/fstab automatically tries to mount during boot - however, it won&amp;rsquo;t try to mount once a device is connected after boot.</description>
    </item>
    
    <item>
      <title>Working with Terraform</title>
      <link>/2018/08/</link>
      <pubDate>Sat, 04 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/</guid>
      <description>Terraform is a cloud orchestration scripting language. This allows the capturing of cloud infrastructure. Instead of relying on your network and resources to be sat whilst you work on other projects, by using terraform, you can tear-down your infrastructure and then create it again from where you left of (saving money on the infrastructure that would be incurring a cost).
Another advantage is that what you are creating is a resource for the project that is reproducible.</description>
    </item>
    
    <item>
      <title>Sync Google Calendar With Org Agenda</title>
      <link>/2018-03-18-sync-google-calendar-with-org-agenda/</link>
      <pubDate>Sun, 18 Mar 2018 13:02:55 +0000</pubDate>
      
      <guid>/2018-03-18-sync-google-calendar-with-org-agenda/</guid>
      <description>I use org-mode an awful lot - it helps me manage my tasks and code all in one place. However, the organisation that I work for have just migrated over to Google Suite and manage meetings extensively using Google Calendar. I really wanted my Google Calendar to sync with my org-agenda. Org-agenda is a tool that pulls in any scheduled activities from all your files in to one dynamic view. It&amp;rsquo;s pretty much what drives my working day.</description>
    </item>
    
    <item>
      <title>How to create an instance that pulls your website content automatically</title>
      <link>/2017/10/03/AWS-how-to-automatically-launch-apache-with-your-site-content/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/03/AWS-how-to-automatically-launch-apache-with-your-site-content/</guid>
      <description>Amazon Web Services allows you to spin up instances very quickly. This how to will show you how to upload your content to a S3 bucket and then launch an instance that pulls that content in and starts Apache to serve that content.
Initially, you will need to create a role under IAM. This will have to be able to access S3, so create the role, choose which service you would like to associate it with.</description>
    </item>
    
    <item>
      <title>AWS - How to Create A VPC</title>
      <link>/2017/09/20/how-to-create-a-vpc/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/20/how-to-create-a-vpc/</guid>
      <description>AWS allows you to create your own virtual private cloud (or VPC). This is a network within which your machines will communicate. You can control the level of access across your VPC through subnets, Network Access Control Lists and Security Groups.
Network Access Control lists allow particular traffic in and outbound, but are stateless; that is, if you allow traffic in, it doesn&amp;rsquo;t necessarily mean that traffic will leave the network.</description>
    </item>
    
    <item>
      <title>AWS - How to Serve Traffic from a Load Balancer</title>
      <link>/2017/09/20/AWS-how-to-serve-traffic-from-load-balancer/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/20/AWS-how-to-serve-traffic-from-load-balancer/</guid>
      <description>Amazon Web Services (AWS) allows you to serve private network traffic from behind a public load balancer. This offers extra security benefits as it detects DDOS traffic and other exploits and offers a layer of protection.
There are some things you should know before you start this tutorial. You should know:
 How to create a VPC How to configure subnets How to create an EC2 instance How to ensure an EC2 instance is within an particular subnet How to ssh to an EC2 instance  You will create a new VPC.</description>
    </item>
    
    <item>
      <title>A Cartoon About File Permissions</title>
      <link>/2017/05/06/A-cartoon-about-file-permissions/</link>
      <pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/06/A-cartoon-about-file-permissions/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Finding large files in a directory</title>
      <link>/2016/11/20/finding-large-files-in-a-directory/</link>
      <pubDate>Sun, 20 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/20/finding-large-files-in-a-directory/</guid>
      <description>I have directories that agedu shows as having large files. However, agedu doesn&amp;rsquo;t tell me what the names of the files are.
A quick find will sort that
find . -maxdepth 1 -type f -exec \/usr\/bin\/ls -al {} \; | awk &#39;{print $5,$9}&#39; | sort -nr &amp;gt; bigfiles.txt  Run this, and you will have a file called bigfiles.txt that has the size in bytes and the filename. This does not work recursively, with the flag -maxdepth 1 preventing that.</description>
    </item>
    
    <item>
      <title>Using sed</title>
      <link>/2016/02/20/using-sed/</link>
      <pubDate>Sat, 20 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/02/20/using-sed/</guid>
      <description>sed is a quick command line utility to change text within a file, or input stream. Typically, it is used within a pipe situation (i.e. using the character | on the command line). If you are not familiar with that command, you will need to research that before continuing.
A simple use of sed is to replace characters in a stream or file. This is done using regular expressions. This will help you search for a set of characters and then replace them with the alternative.</description>
    </item>
    
    <item>
      <title>Bash find command</title>
      <link>/2016/01/24/bash-find-command/</link>
      <pubDate>Sun, 24 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/01/24/bash-find-command/</guid>
      <description>I&amp;rsquo;ve been using the find command simply since I can remember, but I&amp;rsquo;ve never really got to see the true power of this command. Combined with the -exec flag this command can throw up a lot of different uses. -exec allows you to work with other bash commands and operate on them.
A basic use would look like this:
$ find . -name &amp;quot;*&amp;quot; -type f -size +10M -exec rm {} \;  Let&amp;rsquo;s break this down.</description>
    </item>
    
    <item>
      <title>Setting up a firewall on Linux Ubuntu 14.04</title>
      <link>/2015/12/24/setting-up-firewall/</link>
      <pubDate>Thu, 24 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/24/setting-up-firewall/</guid>
      <description>This post walks throug the steps needed to set up a firewall on Ubuntu 14.04. Note that 14.04 is now end of life.
Uses Firewalls allow only particular access to particular network ports and paths. You can remove access to a port or a specific IP address or a range of IP addresses.
Admins can apply rules according to what access they would like - these rules include both outgoing and incoming network traffic.</description>
    </item>
    
    <item>
      <title>How to enable disk quotas for users</title>
      <link>/2015/12/22/how-to-enable-disk-quotas-linux/</link>
      <pubDate>Tue, 22 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/22/how-to-enable-disk-quotas-linux/</guid>
      <description>Linux allows setting quotas on a filesystem. This will prevent users from using more diskspace than they are allowed. This can also be used to manage group allowances to enforce the allowance for a collection of users. Stopping users from filling up a diskspace can be an important on a shared system as filling up a physical disk drive can bring a system down, or make it unstable.
Steps Initially, you will need to mount a filesystem with a &amp;lsquo;usrquota&amp;rsquo; or &amp;lsquo;groupquota&amp;rsquo; command passed in /etc/fstab.</description>
    </item>
    
    <item>
      <title>Encrypt a partition on Linux</title>
      <link>/2015/12/05/encrypt-a-partition/</link>
      <pubDate>Sat, 05 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/05/encrypt-a-partition/</guid>
      <description>An encrypted partition can add a layer of security to your system. When initialized, it will ask for the passphrase which, if unavailable, will not allow proper mounting. This renders the information on the drive as unreadable.
Most systems use the Linux Unified Key Setup (LUKS for short) format for encryption and this can be a standard install for most distribution.
Steps for setting up LUKS Setting up the drive Firstly you should have a partition drive that is unmounted and unformatted (no filesystem).</description>
    </item>
    
    <item>
      <title>How and why you should be using 2 factor authentication</title>
      <link>/2015/10/31/how-and-why-2-factor-authentication/</link>
      <pubDate>Sat, 31 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/10/31/how-and-why-2-factor-authentication/</guid>
      <description>Two factor authentication provides another layer of security to any sign in for services you use. By enabling 2 factor authentication, you are using another layer of security when signing in. However, this extra layer of security is a physical one, not necessarily digital. The 2 factor authentication requires a particular object which cannot be replicated. This can be the form of a USB key or a mobile phone. Banks have used this before with card readers which produce a particular code.</description>
    </item>
    
    <item>
      <title>Linux group explained</title>
      <link>/2015/10/18/groups-explained/</link>
      <pubDate>Sun, 18 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/10/18/groups-explained/</guid>
      <description>Users on a linux system belong to at least one group. Groups allow a systems administrator to create parts of the filesystem where a group of users can share files. They also allow a group of users to access particular commands or resources on the system, that other users might not be able to access.
Groups are defined in the /etc/group file, which is only root writeable.
To create a group, the groupadd command is used.</description>
    </item>
    
    <item>
      <title>How to set-up RAID on Linux</title>
      <link>/2015/08/27/how-to-set-up-raid-drives-linux/</link>
      <pubDate>Thu, 27 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/08/27/how-to-set-up-raid-drives-linux/</guid>
      <description>RAID disks offer particular advantages over ordinary single disk set up. Data redundancy is improved (consider it to be a continuous backup) and also significant performance can be seen with the correct configuration.
There are different types of RAID levels and each level will need to be chosen on a use-case:
  RAID 0: Uses only striping - this makes two disks appear like one larger disk. Provides a performance boost when accessing disks.</description>
    </item>
    
    <item>
      <title>How to set-up LVM on Linux</title>
      <link>/2015/08/21/how-to-set-up-lvm-linux/</link>
      <pubDate>Fri, 21 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/08/21/how-to-set-up-lvm-linux/</guid>
      <description>What are the advantages of Logical Volume Management (LVM)?
LVM treats your physical harddrives as &amp;lsquo;elastic&amp;rsquo; storage - that is extents can be across disks allowing filesystems to be across many disks and/or partitions. This allows a lot of flexibility and can allow filesystems to shrink or grow easily.
There is a small disadvantage when using LVM - there is an overhead when reading and writing to disk - which doesn&amp;rsquo;t normally happen when writing to a normal block disk.</description>
    </item>
    
  </channel>
</rss>
